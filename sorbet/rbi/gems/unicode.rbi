# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/unicode/all/unicode.rbi
#
# unicode-0.4.4.4
module Unicode
  def abbr_categories(arg0); end
  def capitalize(arg0); end
  def categories(arg0); end
  def compose(arg0); end
  def decompose(arg0); end
  def decompose_compat(arg0); end
  def decompose_safe(arg0); end
  def downcase(arg0); end
  def nfc(arg0); end
  def nfc_safe(arg0); end
  def nfd(arg0); end
  def nfd_safe(arg0); end
  def nfkc(arg0); end
  def nfkd(arg0); end
  def normalize_C(arg0); end
  def normalize_C_safe(arg0); end
  def normalize_D(arg0); end
  def normalize_D_safe(arg0); end
  def normalize_KC(arg0); end
  def normalize_KD(arg0); end
  def self.abbr_categories(arg0); end
  def self.capitalize(arg0); end
  def self.categories(arg0); end
  def self.compose(arg0); end
  def self.decompose(arg0); end
  def self.decompose_compat(arg0); end
  def self.decompose_safe(arg0); end
  def self.downcase(arg0); end
  def self.nfc(arg0); end
  def self.nfc_safe(arg0); end
  def self.nfd(arg0); end
  def self.nfd_safe(arg0); end
  def self.nfkc(arg0); end
  def self.nfkd(arg0); end
  def self.normalize_C(arg0); end
  def self.normalize_C_safe(arg0); end
  def self.normalize_D(arg0); end
  def self.normalize_D_safe(arg0); end
  def self.normalize_KC(arg0); end
  def self.normalize_KD(arg0); end
  def self.strcmp(arg0, arg1); end
  def self.strcmp_compat(arg0, arg1); end
  def self.text_elements(arg0); end
  def self.upcase(arg0); end
  def self.width(*arg0); end
  def strcmp(arg0, arg1); end
  def strcmp_compat(arg0, arg1); end
  def text_elements(arg0); end
  def upcase(arg0); end
  def width(*arg0); end
end
