# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/heroics/all/heroics.rbi
#
# heroics-0.0.24
module Heroics
  def default_configuration(&block); end
  def self.build_context(module_name, schema, base_url, options); end
  def self.camel_case(text); end
  def self.cli_from_schema(name, output, schema, url, options = nil); end
  def self.client_from_schema(schema, url, options = nil); end
  def self.download_schema(url, options = nil); end
  def self.generate_client; end
  def self.oauth_client_from_schema(oauth_token, schema, url, options = nil); end
  def self.pretty_name(name); end
  def self.ruby_name(name); end
  def self.token_client_from_schema(token, schema, url, options = nil); end
  extend Heroics
end
class Heroics::SchemaError < StandardError
end
class Heroics::Configuration
  def base_url; end
  def base_url=(base_url); end
  def cache_path; end
  def cache_path=(cache_path); end
  def headers=(headers); end
  def initialize; end
  def module_name; end
  def module_name=(module_name); end
  def options; end
  def ruby_name_replacement_patterns; end
  def ruby_name_replacement_patterns=(patterns); end
  def schema; end
  def schema=(schema); end
  def schema_filepath=(schema_filepath); end
  def self.defaults; end
  def self.restore_defaults; end
end
class Heroics::Link
  def initialize(url, link_schema, options = nil); end
  def request_with_cache(connection, options); end
  def run(*parameters); end
  def unpack_url(url); end
end
class Heroics::Link::CachedResponse
  def body; end
  def headers; end
  def initialize(status, body, headers); end
  def status; end
end
class Heroics::Resource
  def initialize(links); end
  def method_missing(name, *parameters); end
end
class Heroics::Client
  def initialize(resources, url); end
  def inspect; end
  def method_missing(name); end
  def to_s; end
end
class Heroics::Schema
  def description; end
  def initialize(schema); end
  def inspect; end
  def resource(name); end
  def resources; end
  def schema; end
  def to_s; end
end
class Heroics::ResourceSchema
  def description; end
  def initialize(schema, name); end
  def link(name); end
  def links; end
  def name; end
end
class Heroics::LinkSchema
  def content_type; end
  def description; end
  def encode(body); end
  def example_body; end
  def format_parameter(parameter); end
  def format_path(parameters); end
  def initialize(schema, resource_name, link_index); end
  def iso_format(time); end
  def link_schema; end
  def lookup_parameter(path, schema); end
  def method; end
  def name; end
  def needs_request_body?; end
  def parameter_details; end
  def parameters; end
  def pretty_name; end
  def pretty_resource_name; end
  def resolve_parameter_details(parameters); end
  def resolve_parameters(parameters); end
  def resource_name; end
  def unpack_multiple_parameters(parameters); end
end
class Heroics::Parameter
  def description; end
  def initialize(resource_name, name, description); end
  def inspect; end
  def name; end
  def resource_name; end
end
class Heroics::ParameterChoice
  def description; end
  def initialize(resource_name, parameters); end
  def inspect; end
  def name; end
  def parameters; end
  def resource_name; end
end
class Heroics::Command
  def description; end
  def initialize(cli_name, link_schema, client, output); end
  def name; end
  def run(*parameters); end
  def usage; end
end
class Heroics::CLI
  def initialize(name, commands, output); end
  def run(*parameters); end
  def usage; end
end
class Heroics::GeneratorResource
  def class_name; end
  def description; end
  def initialize(name, description, links); end
  def links; end
  def name; end
end
class Heroics::GeneratorLink
  def description; end
  def initialize(name, description, parameters, takes_body); end
  def method_signature; end
  def name; end
  def parameter_names; end
  def parameters; end
  def takes_body; end
end
class Heroics::BodyParameter
  def description; end
  def initialize; end
  def name; end
end
