# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/immigrant/all/immigrant.rbi
#
# immigrant-0.3.6
module Immigrant
  def self.ignore_keys; end
  def self.ignore_keys=(arg0); end
  def self.load; end
end
class Immigrant::KeyValidator
  def column_exists?(table_name, column_name); end
  def columns_for(table_name); end
  def connection; end
  def has_unique_index?(table_name, column_name); end
  def valid?(key); end
end
module Immigrant::ForeignKeyExtensions
  def dump_foreign_key(foreign_key); end
  def foreign_key_column_for(table_name); end
  def hash_key; end
  def initialize(from_table, to_table, options, *args); end
  def remove_prefix_and_suffix(table); end
  def to_ruby(action = nil); end
end
class Immigrant::Railtie < Rails::Railtie
end
class Immigrant::KeyFinder
  def candidate_model_keys(classes); end
  def candidate_reflections_for(klass); end
  def current_foreign_keys; end
  def foreign_keys_for(klass); end
  def foreign_keys_for_reflection(klass, reflection); end
  def infer_belongs_to_keys(klass, reflection); end
  def infer_habtm_keys(klass, reflection); end
  def infer_has_n_keys(klass, reflection); end
  def infer_keys(db_keys = nil, classes = nil); end
  def key_validator; end
  def model_classes; end
  def model_keys(classes); end
  def qualified_reflection?(reflection, klass); end
  def tables; end
end
