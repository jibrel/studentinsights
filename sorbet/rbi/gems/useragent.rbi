# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/useragent/all/useragent.rbi
#
# useragent-0.16.10
class UserAgent
  def <=>(other); end
  def comment; end
  def detect_comment(&block); end
  def eql?(other); end
  def initialize(product, version = nil, comment = nil); end
  def product; end
  def self.parse(string); end
  def to_s; end
  def to_str; end
  def version; end
  include UserAgent::Comparable
end
module UserAgent::Comparable
  def <(other); end
  def <=(other); end
  def ==(other); end
  def >(other); end
  def >=(other); end
end
module UserAgent::Browsers
  def self.all; end
  def self.extend(array); end
end
class UserAgent::Browsers::Base < Array
  def <=>(other); end
  def application; end
  def bot?; end
  def browser; end
  def detect_comment(comment); end
  def detect_comment_match(regexp); end
  def detect_product(product); end
  def eql?(other); end
  def method_missing(method, *args, &block); end
  def mobile?; end
  def os; end
  def platform; end
  def respond_to?(symbol, include_all = nil); end
  def to_h; end
  def to_s; end
  def to_str; end
  def version; end
  include UserAgent::Comparable
end
class UserAgent::Browsers::Chrome < UserAgent::Browsers::Base
  def application; end
  def browser; end
  def build; end
  def localization; end
  def os; end
  def platform; end
  def self.extend?(agent); end
  def version; end
  def webkit; end
end
class UserAgent::Browsers::Edge < UserAgent::Browsers::Base
  def browser; end
  def os; end
  def os_comment; end
  def platform; end
  def self.extend?(agent); end
  def version; end
end
class UserAgent::Browsers::Gecko < UserAgent::Browsers::Base
  def browser; end
  def localization; end
  def os; end
  def platform; end
  def security; end
  def self.extend?(agent); end
  def version; end
end
class UserAgent::Browsers::InternetExplorer < UserAgent::Browsers::Base
  def browser; end
  def chromeframe; end
  def compatibility_view?; end
  def os; end
  def platform; end
  def real_version; end
  def self.extend?(agent); end
  def trident_version; end
  def version; end
end
class UserAgent::Browsers::Opera < UserAgent::Browsers::Base
  def browser; end
  def localization; end
  def macintosh?; end
  def mini?; end
  def mobile?; end
  def os; end
  def platform; end
  def security; end
  def self.extend?(agent); end
  def version; end
end
class UserAgent::Browsers::Webkit < UserAgent::Browsers::Base
  def application; end
  def browser; end
  def build; end
  def localization; end
  def os; end
  def platform; end
  def security; end
  def self.extend?(agent); end
  def version; end
  def webkit; end
end
class UserAgent::Browsers::WechatBrowser < UserAgent::Browsers::Base
  def browser; end
  def os; end
  def platform; end
  def self.extend?(agent); end
  def version; end
end
class UserAgent::Browsers::WindowsMediaPlayer < UserAgent::Browsers::Base
  def browser; end
  def classic?; end
  def has_wmfsdk?(version); end
  def mobile?; end
  def os; end
  def platform; end
  def self.extend?(agent); end
  def wmfsdk_version; end
end
class UserAgent::Browsers::ITunes < UserAgent::Browsers::Webkit
  def browser; end
  def build; end
  def full_os; end
  def os; end
  def security; end
  def self.extend?(agent); end
  def version; end
end
class UserAgent::Browsers::AppleCoreMedia < UserAgent::Browsers::Base
  def application; end
  def browser; end
  def localization; end
  def os; end
  def platform; end
  def security; end
  def self.extend?(agent); end
end
class UserAgent::Browsers::Libavformat < UserAgent::Browsers::Base
  def browser; end
  def os; end
  def platform; end
  def self.extend?(agent); end
  def version; end
end
class UserAgent::Browsers::PlayStation < UserAgent::Browsers::Base
  def browser; end
  def mobile?; end
  def os; end
  def platform; end
  def self.extend?(agent); end
  def version; end
end
class UserAgent::Browsers::PodcastAddict < UserAgent::Browsers::Base
  def browser; end
  def device; end
  def device_build; end
  def localization; end
  def mobile?; end
  def os; end
  def platform; end
  def security; end
  def self.extend?(agent); end
  def version; end
end
class UserAgent::Browsers::Vivaldi < UserAgent::Browsers::Base
  def application; end
  def browser; end
  def build; end
  def localization; end
  def os; end
  def platform; end
  def self.extend?(agent); end
  def version; end
  def webkit; end
end
module UserAgent::OperatingSystems
  def self.normalize_chrome_os(os); end
  def self.normalize_ios(os); end
  def self.normalize_mac_os_x(os); end
  def self.normalize_os(os); end
end
class UserAgent::Version
  def <=>(other); end
  def ==(other); end
  def eql?(other); end
  def initialize(str); end
  def inspect; end
  def nil?; end
  def self.new(obj = nil); end
  def to_a; end
  def to_s; end
  def to_str; end
  include Comparable
end
